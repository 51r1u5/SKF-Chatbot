{
   "items":[
      {
         "ID":1,
        
         "Ques":[
		 "What is Filename Injection Path Traversal?",
		 "What does Filename Injection Path Traversal mean?",
		 "What is Filename Injection?",
		 "Tell me something about Filename Injection Path Traversal?",
		 "Filename Injection Path Traversal?"]
		 
         "Answer":"Path Traversal attack aims to access files and directories that are stored outside the web root folder. By browsing the application, the attacker looks for absolute links to files stored on the web server. By manipulating variables that reference files with dotdotslash (../); sequences and its variations, it may be possible to access arbitrary files and directories stored on file system, including application source code, configuration, and critical system files, limited by system operational access control. The attacker uses  ../../ sequences to move up to root directory, thus permitting navigation through the file system. This attack can be executed with an external malicious code injected on the path, like the Resource Injection attack."
      }

      {
         "ID":2,
        
         "Ques":[
		 "What is XSS?",
		 "What does XSS mean?",
		 "What is Cross site scripting?",
		 "Tell me something about XSS",
		 "XSS"]
		 
         "Answer":"Every time the application gets userinput, whether this showing it on screen or processing this data in the application background, these parameters should be escaped for malicious code in order to prevent crosssite scripting injections.When an attacker gains the possibility to perform an XSS injection, he is given the opportunity to inject HTML and JavaScript code directly into the application. This could lead to accounts being compromised by stealing session cookies or directly affect 			   the operation of the target application."
	}

	{
         "ID":3,
        
         "Ques":[

		 "What does Command injection mean?",
		 "What is Command injection",
		 "Tell me something about Command injection",
		 "Command injection"]
		 
         "Answer":"Command injection is an attack in which the goal is execution of arbitrary commands onthe host operating system via a vulnerable application. Command injection attacks arepossible when an application passes unsafe user supplied data(forms, cookies, HTTP headers etc.) to a system shell. In this attack,the attackersupplied operating system commands are usually executed with the privilegesof the vulnerable application. Command injection attacks are possible largely due toinsufficient input validation. This attack differs from Code Injection, in that codeinjection allows the attacker to adds his own code that is then executed by the application.In Code Injection, the attacker extends the default functionality of the applicationwithout the necessity of executing system commands."
      }








]
	  
	  
}
